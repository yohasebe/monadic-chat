app "ImageGeneratorGemini" do
  description do
    en <<~TEXT
    Generate images from text descriptions. <a href="https://yohasebe.github.io/monadic-chat/#/basic-usage/basic-apps?id=image-generator" target="_blank"><i class="fa-solid fa-circle-info"></i></a>
    TEXT
    
    ja <<~TEXT
    テキスト説明から画像生成。 <a href="https://yohasebe.github.io/monadic-chat/#/basic-usage/basic-apps?id=image-generator" target="_blank"><i class="fa-solid fa-circle-info"></i></a>
    TEXT
    
    zh <<~TEXT
    从文本描述生成图像。 <a href="https://yohasebe.github.io/monadic-chat/#/basic-usage/basic-apps?id=image-generator" target="_blank"><i class="fa-solid fa-circle-info"></i></a>
    TEXT
    
    ko <<~TEXT
    텍스트 설명에서 이미지 생성. <a href="https://yohasebe.github.io/monadic-chat/#/basic-usage/basic-apps?id=image-generator" target="_blank"><i class="fa-solid fa-circle-info"></i></a>
    TEXT
    
    es <<~TEXT
    Generar imágenes desde descripciones de texto. <a href="https://yohasebe.github.io/monadic-chat/#/basic-usage/basic-apps?id=image-generator" target="_blank"><i class="fa-solid fa-circle-info"></i></a>
    TEXT
    
    fr <<~TEXT
    Générer des images à partir de descriptions textuelles. <a href="https://yohasebe.github.io/monadic-chat/#/basic-usage/basic-apps?id=image-generator" target="_blank"><i class="fa-solid fa-circle-info"></i></a>
    TEXT
    
    de <<~TEXT
    Bilder aus Textbeschreibungen generieren. <a href="https://yohasebe.github.io/monadic-chat/#/basic-usage/basic-apps?id=image-generator" target="_blank"><i class="fa-solid fa-circle-info"></i></a>
    TEXT
  end

  icon "fa-regular fa-image"

  display_name "Image Generator"

  llm do
    provider "gemini"
    model "gemini-2.5-flash"
    temperature 0.1
  end

  system_prompt <<~TEXT
    You are an AI image generation and editing assistant powered by Google's advanced AI models.
    
    1. IMAGE GENERATION:
       When user wants to create a new image from text:
       - Use operation: "generate"
       - Choose model: "imagen3" for high quality or "gemini" for versatile generation
       - Be extremely detailed and specific in your prompts for best results
    
    2. IMAGE EDITING (Semantic Masking):
       When user uploads an image and wants to edit it:
       - Use operation: "edit" 
       - Model will automatically be "gemini" (supports semantic understanding)
       - Gemini uses SEMANTIC MASKING - it understands what you want to change from natural language
       - Simply describe what to add, remove, or modify
       - Examples:
         • "Add a red hat to the person"
         • "Change the sky to a dramatic sunset"
         • "Remove the car from the background"
         • "Make the person smile"
         • "Replace the grass with snow"
       - The AI automatically identifies the relevant regions and applies changes naturally
       - No manual mask drawing needed - the AI understands context semantically
    
    3. DETECTING OPERATION MODE:
       - User uploads image + provides editing instructions → use "edit"
       - User only provides text description → use "generate"
       - Any "mask__" prefixed files can be safely ignored
    
    4. IMAGE DISPLAY:
       IMPORTANT: Never use markdown code blocks. Always output pure HTML.
       
       For successful operations, use this exact HTML template:
       <div class="prompt">
         <b>[operation]</b> (using [model]): [user_prompt]
       </div>
       <div class="generated_image">
         <img src="/data/[filename]">
       </div>
    
    5. BEST PRACTICES:
       - For generation: Use hyper-specific, detailed descriptions
       - For editing: Be clear about what elements to change and how
       - Iterate conversationally - you can refine images through multiple turns
       - If the request is not in English, translate it to English for the API
       - Display results with the translated English prompt for clarity
    
    Available operations:
    - generate: Create new images from detailed text descriptions
    - edit: Modify existing images using semantic masking (natural language)
    
    Available models:
    - imagen3: Specialized high-quality image generation
    - gemini: Versatile generation and semantic editing with context understanding
  TEXT

  features do
    disabled !CONFIG["GEMINI_API_KEY"]
    easy_submit false
    auto_speech false
    initiate_from_assistant false
    image true
    pdf false
    image_generation true
    monadic false
    group "Google"
  end

  tools do
    define_tool "generate_image_with_gemini", "Generate or edit images using Google's AI models." do
      parameter :prompt, "string", "Text description of the desired image or editing instructions", required: true
      parameter :operation, "string", "Type of operation: 'generate' or 'edit'", required: false
      parameter :model, "string", "Model to use: 'imagen3' for high quality generation, 'gemini' for versatile generation/editing", required: false
      parameter :session, "object", "Session object (automatically provided)", required: false
    end

    # Auto-generated tool definitions
    define_tool "generate_image_with_openai", "Generate Image With Openai" do
      parameter :operation, "string", "The operation", required: true
      parameter :model, "string", "The model", required: true
      parameter :prompt, "string", "The prompt"
      parameter :images, "string", "The images"
      parameter :mask, "string", "The mask"
      parameter :n, "integer", "The n"
      parameter :size, "string", "The size"
      parameter :quality, "string", "The quality"
      parameter :output_format, "string", "The output format"
      parameter :background, "string", "The background"
      parameter :output_compression, "string", "The output compression"
    end

    define_tool "generate_image_with_grok", "Generate Image With Grok" do
      parameter :model, "string", "The model", required: true
      parameter :prompt, "string", "The prompt", required: true
      parameter :n, "integer", "The n"
      parameter :size, "string", "The size"
      parameter :output_format, "string", "The output format"
    end
  end
end