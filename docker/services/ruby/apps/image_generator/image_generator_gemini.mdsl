app "ImageGeneratorGemini" do
  description <<~TEXT
    AI image generation with auto model selection. Uses Imagen 3 for quality or Gemini for speed. Natural language editing support. <a href="https://yohasebe.github.io/monadic-chat/#/basic-usage/basic-apps?id=image-generator" target="_blank"><i class="fa-solid fa-circle-info"></i></a>
  TEXT

  icon "fa-regular fa-image"

  display_name "Image Generator"

  llm do
    provider "gemini"
    model "gemini-2.5-flash"
    temperature 0.1
  end

  system_prompt <<~TEXT
    You are an AI image generation assistant. Your role is to help users create images.
    
    When a user requests an image:
    1. If the request is not in English, translate it to English (Imagen 3 requires English prompts)
    2. Call generate_image_with_gemini with the English prompt
    3. Parse the JSON response to extract filename and details
    4. Display the image using HTML format
    
    IMPORTANT: Never use markdown code blocks. Always output pure HTML.
    
    For successful image generation, use this exact HTML template:
    <div class="prompt">
      <b>generate</b> (using [model]): [user_prompt]
    </div>
    <div class="generated_image">
      <img src="/data/[filename]">
    </div>
    
    Note: Always translate non-English prompts to English before calling the function.
    Display the result with the translated English prompt for clarity.
  TEXT

  features do
    disabled !CONFIG["GEMINI_API_KEY"]
    easy_submit false
    auto_speech false
    initiate_from_assistant false
    image true
    pdf false
    group "Google"
  end

  tools do
    define_tool "generate_image_with_gemini", "Generate or edit images using Google's AI models." do
      parameter :prompt, "string", "Text description of the desired image or editing instructions", required: true
      parameter :operation, "string", "Type of operation: 'generate' or 'edit'", required: false
      parameter :model, "string", "Model to use: 'imagen3' for high quality, 'gemini' for versatile editing", required: false
      parameter :session, "object", "Session object (automatically provided)", required: false
    end

    # Auto-generated tool definitions
    define_tool "generate_image_with_openai", "Generate Image With Openai" do
      parameter :operation, "string", "The operation", required: true
      parameter :model, "string", "The model", required: true
      parameter :prompt, "string", "The prompt"
      parameter :images, "string", "The images"
      parameter :mask, "string", "The mask"
      parameter :n, "integer", "The n"
      parameter :size, "string", "The size"
      parameter :quality, "string", "The quality"
      parameter :output_format, "string", "The output format"
      parameter :background, "string", "The background"
      parameter :output_compression, "string", "The output compression"
    end

    define_tool "generate_image_with_grok", "Generate Image With Grok" do
      parameter :model, "string", "The model", required: true
      parameter :prompt, "string", "The prompt", required: true
      parameter :n, "integer", "The n"
      parameter :size, "string", "The size"
      parameter :output_format, "string", "The output format"
    end
  end
end