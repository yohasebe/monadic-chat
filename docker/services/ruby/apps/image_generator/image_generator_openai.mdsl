app "ImageGeneratorOpenAI" do
  description do
    en <<~TEXT
    Generate images from text descriptions. <a href="https://yohasebe.github.io/monadic-chat/#/basic-usage/basic-apps?id=image-generator" target="_blank"><i class="fa-solid fa-circle-info"></i></a>
    TEXT
    
    ja <<~TEXT
    テキスト説明から画像生成。 <a href="https://yohasebe.github.io/monadic-chat/#/basic-usage/basic-apps?id=image-generator" target="_blank"><i class="fa-solid fa-circle-info"></i></a>
    TEXT
    
    zh <<~TEXT
    从文本描述生成图像。 <a href="https://yohasebe.github.io/monadic-chat/#/basic-usage/basic-apps?id=image-generator" target="_blank"><i class="fa-solid fa-circle-info"></i></a>
    TEXT
    
    ko <<~TEXT
    텍스트 설명에서 이미지 생성. <a href="https://yohasebe.github.io/monadic-chat/#/basic-usage/basic-apps?id=image-generator" target="_blank"><i class="fa-solid fa-circle-info"></i></a>
    TEXT
    
    es <<~TEXT
    Generar imágenes desde descripciones de texto. <a href="https://yohasebe.github.io/monadic-chat/#/basic-usage/basic-apps?id=image-generator" target="_blank"><i class="fa-solid fa-circle-info"></i></a>
    TEXT
    
    fr <<~TEXT
    Générer des images à partir de descriptions textuelles. <a href="https://yohasebe.github.io/monadic-chat/#/basic-usage/basic-apps?id=image-generator" target="_blank"><i class="fa-solid fa-circle-info"></i></a>
    TEXT
    
    de <<~TEXT
    Bilder aus Textbeschreibungen generieren. <a href="https://yohasebe.github.io/monadic-chat/#/basic-usage/basic-apps?id=image-generator" target="_blank"><i class="fa-solid fa-circle-info"></i></a>
    TEXT
  end

  icon "fa-regular fa-image"

  display_name "Image Generator"

  llm do
    provider "openai"
    model ["gpt-5", "gpt-4.1"]
    reasoning_effort "minimal"
    temperature 0.0
  end

  system_prompt <<~TEXT
    You help the user generate and edit images using OpenAI's image generation models.
    
    CRITICAL MASK EDITING RULES - MUST FOLLOW:
    
    🔴 IMPORTANT: When you see "Mask images for editing" in the conversation, you MUST use edit operation!
    
    1. DETECTING MASK FILES:
       - Look for "Mask images for editing" section in the message
       - Any filename starting with "mask__" is a MASK FILE for EDITING
       - The corresponding original image typically has pattern "img_[timestamp]_[id].png"
       - If ANY mask file exists, you MUST use "edit" operation
    
    2. REQUIRED EDIT OPERATION FORMAT:
       When mask files are present, ALWAYS use:
       generate_image_with_openai({
         operation: "edit",  // MUST be "edit", NOT "generate"!
         model: "gpt-image-1",
         prompt: "[describe ONLY what to put in the masked/transparent area]",
         images: ["img_[timestamp]_[id].png"],  // Original image
         mask: "mask__[timestamp]_[id].png",    // Mask file (REQUIRED!)
         n: 1,
         size: "1024x1024",
         input_fidelity: "high"  // Preserves original image outside mask
       })
    
    3. ABSOLUTE RULES:
       - If you see "mask__" files, NEVER use operation: "generate"
       - NEVER offer to create new images when masks exist
       - NEVER ignore mask files in the conversation
       - ALWAYS check for "Mask images for editing" in user messages
       - The prompt should ONLY describe what goes in the masked area
    
    4. EXAMPLE CORRECT RESPONSE:
       User: "Put a red car in the masked area" [with mask__123_abc.png attached]
       You: "I'll edit the image using the mask to add a red car in the specified area."
       [Use operation: "edit" with the mask file]
       
    5. EXAMPLE WRONG RESPONSE:
       User: "Put a red car in the masked area" [with mask__123_abc.png attached]  
       You: "I'll generate a new image with a red car."
       [Using operation: "generate" - THIS IS WRONG!]
    
    Available models:
    - gpt-image-1: Latest model with best quality and instruction following
      - Sizes: 1024x1024, 1024x1536, 1536x1024, 1792x1024, 1024x1792
      - Quality: low, medium, high, auto (default)
      - Background: MUST be one of: "transparent", "opaque", or "auto" (default)
      - Output format: "png" (default), "jpeg", or "webp"
      - Output compression: Integer between 1-100 (only for jpeg/webp)
      - Input fidelity (edit only): "high" preserves original image, "low" allows more creative changes
    - dall-e-3: Previous generation model
      - Sizes: 1024x1024, 1792x1024, 1024x1792
      - Quality: standard, hd
    - dall-e-2: Legacy model
      - Sizes: 256x256, 512x512, 1024x1024
      - Quality: standard
      - Only model that supports variation operation
    
    1. For new image generation, call generate_image_with_openai({
         operation: "generate",
         model: "gpt-image-1", // or "dall-e-3", "dall-e-2"
         prompt,
         n,
         size,
         quality,
         output_format, // gpt-image-1 only
         background,    // gpt-image-1 only
         output_compression // gpt-image-1 only
       }).
    2. For image editing with mask (inpainting), call generate_image_with_openai({
         operation: "edit",
         model: "gpt-image-1", // Best for mask editing, or "dall-e-2"
         prompt,  // Describe ONLY what should appear in the masked area
         n,
         images,  // The original image
         mask,    // REQUIRED: The mask image filename
         size,
         quality,
         input_fidelity: "high", // IMPORTANT: Use "high" to preserve original image
         output_format,     // gpt-image-1 only: "png", "jpeg", or "webp"
         background,        // gpt-image-1 only: "transparent", "opaque", or "auto"
         output_compression // ONLY for jpeg/webp. NEVER use with PNG!
       }).
       CRITICAL RULES FOR MASK EDITING:
       - ALWAYS include the mask parameter when a mask image exists
       - The prompt should describe ONLY what to put in the masked (transparent) area
       - Do NOT describe the entire image or unchanged areas
       - Never use output_compression with PNG format
       - For PNG output, omit the output_compression parameter entirely
    3. For variation (dall-e-2 only), call generate_image_with_openai({
         operation: "variation",
         model: "dall-e-2",
         n,
         images,
         size
       }).
    
    After receiving a response, embed the returned image URLs using Markdown image syntax WITHOUT placing them in code blocks. For example:
      
      ![Generated Image](/data/FILENAME1.png)
      ![Generated Image](/data/FILENAME2.png)
      
    Do not use HTML `<img>` tags and do not place the Markdown images inside code blocks or triple backticks.
    If an error occurs, return the error message without retrying automatically.
  TEXT

  features do
    disabled !CONFIG["OPENAI_API_KEY"]
    easy_submit false
    auto_speech false
    initiate_from_assistant false
    image true
    pdf false
    image_generation true
  end

  tools do
    define_tool "generate_image_with_openai", "Generate, edit, or create variations of images using OpenAI models." do
      parameter :operation, "string", "Type of operation: 'generate', 'edit', or 'variation'", required: true, enum: ["generate", "edit", "variation"]
      parameter :model, "string", "Model to use for image generation", required: true, enum: ["gpt-image-1", "dall-e-3", "dall-e-2"]
      parameter :prompt, "string", "Text description of the desired image or editing instructions", required: false
      parameter :images, "array", "Array of image filenames for editing or variation operations", required: false, items: {
        type: "string",
        description: "Image filename"
      }
      parameter :mask, "string", "Mask image filename for precise editing control", required: false
      parameter :n, "integer", "Number of images to generate (1-4)", required: false
      parameter :size, "string", "Image dimensions", required: false, enum: ["256x256", "512x512", "1024x1024", "1024x1536", "1536x1024", "1792x1024", "1024x1792"]
      parameter :quality, "string", "Image quality level", required: false, enum: ["standard", "hd", "low", "medium", "high", "auto"]
      parameter :output_format, "string", "Output image format", required: false, enum: ["png", "webp", "jpeg"]
      parameter :background, "string", "Background setting: 'transparent', 'opaque', or 'auto' (gpt-image-1 only)", required: false, enum: ["transparent", "opaque", "auto"]
      parameter :output_compression, "integer", "Compression level for JPEG images (1-100)", required: false
      parameter :input_fidelity, "string", "How closely to match the original image in edits (gpt-image-1 only)", required: false, enum: ["high", "low"]
    end

    # Auto-generated tool definitions
    define_tool "generate_image_with_grok", "Generate Image With Grok" do
      parameter :model, "string", "The model", required: true
      parameter :prompt, "string", "The prompt", required: true
      parameter :n, "integer", "The n"
      parameter :size, "string", "The size"
      parameter :output_format, "string", "The output format"
    end

    define_tool "generate_image_with_gemini", "Generate Image With Gemini" do
      parameter :model, "string", "The model", required: true
      parameter :prompt, "string", "The prompt", required: true
      parameter :n, "integer", "The n"
      parameter :size, "string", "The size"
      parameter :output_format, "string", "The output format"
    end
  end
end