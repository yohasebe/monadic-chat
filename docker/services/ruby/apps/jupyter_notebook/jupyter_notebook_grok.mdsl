app "JupyterNotebookGrok" do
  description do
    en <<~TEXT
    Create and manage Jupyter notebooks with code execution. <a href="https://yohasebe.github.io/monadic-chat/#/basic-usage/basic-apps?id=jupyter-notebook" target="_blank"><i class="fa-solid fa-circle-info"></i></a>
    TEXT
    
    ja <<~TEXT
    コード実行可能なJupyterノートブックの作成と管理。 <a href="https://yohasebe.github.io/monadic-chat/#/basic-usage/basic-apps?id=jupyter-notebook" target="_blank"><i class="fa-solid fa-circle-info"></i></a>
    TEXT
    
    zh <<~TEXT
    创建和管理可执行代码的Jupyter笔记本。 <a href="https://yohasebe.github.io/monadic-chat/#/basic-usage/basic-apps?id=jupyter-notebook" target="_blank"><i class="fa-solid fa-circle-info"></i></a>
    TEXT
    
    ko <<~TEXT
    코드 실행이 가능한 Jupyter 노트북 생성 및 관리. <a href="https://yohasebe.github.io/monadic-chat/#/basic-usage/basic-apps?id=jupyter-notebook" target="_blank"><i class="fa-solid fa-circle-info"></i></a>
    TEXT
    
    es <<~TEXT
    Crear y gestionar notebooks Jupyter con ejecución de código. <a href="https://yohasebe.github.io/monadic-chat/#/basic-usage/basic-apps?id=jupyter-notebook" target="_blank"><i class="fa-solid fa-circle-info"></i></a>
    TEXT
    
    fr <<~TEXT
    Créer et gérer des notebooks Jupyter avec exécution de code. <a href="https://yohasebe.github.io/monadic-chat/#/basic-usage/basic-apps?id=jupyter-notebook" target="_blank"><i class="fa-solid fa-circle-info"></i></a>
    TEXT
    
    de <<~TEXT
    Jupyter-Notebooks mit Code-Ausführung erstellen und verwalten. <a href="https://yohasebe.github.io/monadic-chat/#/basic-usage/basic-apps?id=jupyter-notebook" target="_blank"><i class="fa-solid fa-circle-info"></i></a>
    TEXT
  end
  
  icon "rocket"
  display_name "Jupyter Notebook"
  
  llm do
    provider "xai"
    model "grok-code-fast-1"
    temperature 0.0
    max_tokens 4096
    tool_choice "auto"  # Let Grok decide when to use tools
    parallel_function_calling true  # Explicitly enable parallel function calling (default)
  end

  system_prompt <<~TEXT
    You are a Jupyter Notebook assistant. When users ask you to create notebooks or add cells, use the available tools.

    ## CRITICAL: Use the Combined Tool for New Notebooks
    
    When creating a NEW notebook, simply use:
    - `create_and_populate_jupyter_notebook` - This creates the notebook AND adds all cells in ONE operation
    
    Note: You can call both `run_jupyter` and `create_and_populate_jupyter_notebook` in the same response (parallel function calling is enabled)
    
    The `create_and_populate_jupyter_notebook` tool:
    - Creates a new notebook with the given filename
    - Automatically adds a timestamp to the filename
    - Adds all the cells you specify
    - Returns the actual filename with timestamp
    - Use this instead of separate create_jupyter_notebook + add_jupyter_cells calls
    
    Example cells array for the combined tool:
    ```json
    [
      {"cell_type": "code", "source": "import numpy as np\\nimport matplotlib.pyplot as plt"},
      {"cell_type": "markdown", "source": "# Data Analysis"},
      {"cell_type": "code", "source": "x = np.linspace(0, 10, 100)\\ny = np.sin(x)"}
    ]
    ```
    
    ## For Existing Notebooks
    
    Use these tools for working with existing notebooks:
    - `add_jupyter_cells` - Add more cells to an existing notebook
    - `update_jupyter_cell` - Modify a specific cell
    - `delete_jupyter_cell` - Remove a cell
    - `get_jupyter_cells_with_results` - View notebook contents
    
    ## Session Management
    
    - The tools will return the actual notebook filename with timestamp (e.g., notebook_20250828_143025.ipynb)
    - ALWAYS use the EXACT filename returned by the tool in your response
    - DO NOT use placeholder timestamps like 123456 or example dates
    - Remember the notebook filename for the entire conversation
    - DO NOT mention technical details like "The last cell output is..." - just confirm the operation succeeded
    
    For matplotlib plots, Japanese fonts are pre-configured (Noto Sans CJK JP).
    
    CRITICAL: When providing notebook links, use the ACTUAL filename returned by the tool:
    - CORRECT: <a href='http://localhost:8889/lab/tree/actual_notebook_20250828_143025.ipynb' target='_blank'>actual_notebook_20250828_143025.ipynb</a>
    - WRONG: <a href='http://localhost:8889/lab/tree/notebook_20231001_123456.ipynb' target='_blank'>notebook_20231001_123456.ipynb</a>
  TEXT

  features do
    disabled !CONFIG["XAI_API_KEY"]
    easy_submit false
    auto_speech false
    image true
    pdf false
    monadic false
    jupyter true
    mathjax true
    initiate_from_assistant true
  end

  tools do
    # COMBINED TOOL FOR xAI GROK - Similar to Gemini's approach
    define_tool "create_and_populate_jupyter_notebook", "Create a new Jupyter notebook AND add cells in one operation (USE THIS FOR CREATING NEW NOTEBOOKS)" do
      parameter :filename, "string", "Base filename for the notebook", required: true
      parameter :cells, "array", "Array of cell objects to add", required: true
      parameter :run, "boolean", "Whether to run the cells after adding", required: false
    end
    
    define_tool "run_jupyter", "Start or stop JupyterLab" do
      parameter :command, "string", "Command to run (start or stop)", required: true
    end

    define_tool "create_jupyter_notebook", "Create a new Jupyter notebook" do
      parameter :filename, "string", "Base filename for the notebook", required: true
    end

    define_tool "add_jupyter_cells", "Add and run cells in a Jupyter notebook" do
      parameter :filename, "string", "The notebook filename", required: true
      parameter :cells, "array", "Array of cell objects to add", required: true
      parameter :run, "boolean", "Whether to run the cells after adding", required: false
      parameter :escaped, "boolean", "Whether content is escaped", required: false
    end
    
    define_tool "delete_jupyter_cell", "Delete a cell from a Jupyter notebook" do
      parameter :filename, "string", "The notebook filename", required: true
      parameter :index, "integer", "The index of the cell to delete (0-based)", required: true
    end
    
    define_tool "update_jupyter_cell", "Update the content of a cell in a Jupyter notebook" do
      parameter :filename, "string", "The notebook filename", required: true
      parameter :index, "integer", "The index of the cell to update (0-based)", required: true
      parameter :content, "string", "The new content for the cell", required: true
      parameter :cell_type, "string", "The type of cell (code or markdown)", required: false
    end
    
    define_tool "get_jupyter_cells_with_results", "Get all cells with their execution results" do
      parameter :filename, "string", "The notebook filename", required: true
    end
    
    define_tool "execute_and_fix_jupyter_cells", "Execute cells and get error information" do
      parameter :filename, "string", "The notebook filename", required: true
      parameter :max_retries, "integer", "Maximum number of retry attempts", required: false
    end

    define_tool "run_code", "Run program code and return the output" do
      parameter :command, "string", "Program that execute the code (e.g., 'python')", required: true
      parameter :code, "string", "Program code to be executed", required: true
      parameter :extension, "string", "File extension of the code (e.g., 'py')", required: true
    end

    define_tool "fetch_text_from_file", "Fetch text from a file" do
      parameter :file, "string", "File name or file path", required: true
    end

    define_tool "fetch_text_from_pdf", "Extract text content from a PDF file" do
      parameter :pdf, "string", "The filename of the PDF to read", required: true
    end

    define_tool "fetch_text_from_office", "Extract text content from Office files" do
      parameter :file, "string", "The filename of the Office file to read", required: true
    end

    define_tool "write_to_file", "Write content to a file" do
      parameter :filename, "string", "File name or file path", required: true
      parameter :content, "string", "Content to write to the file", required: true
    end

    define_tool "check_environment", "Check the environment setup" do
    end
    
    define_tool "list_jupyter_notebooks", "List all Jupyter notebooks in the data directory" do
    end
    
    define_tool "restart_jupyter_kernel", "Restart the kernel for a notebook" do
      parameter :filename, "string", "The notebook filename", required: true
    end
    
    define_tool "interrupt_jupyter_execution", "Interrupt currently running cells" do
      parameter :filename, "string", "The notebook filename", required: true
    end
    
    define_tool "move_jupyter_cell", "Move a cell to a new position" do
      parameter :filename, "string", "The notebook filename", required: true
      parameter :from_index, "integer", "The current index of the cell (0-based)", required: true
      parameter :to_index, "integer", "The target index position (0-based)", required: true
    end
    
    define_tool "insert_jupyter_cells", "Insert cells at a specific position" do
      parameter :filename, "string", "The notebook filename", required: true
      parameter :index, "integer", "The position to insert cells at (0-based)", required: true
      parameter :cells, "array", "Array of cell objects to insert", required: true
      parameter :run, "boolean", "Whether to run the cells after inserting", required: false
    end
  end
end