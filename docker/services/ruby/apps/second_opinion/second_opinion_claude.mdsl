app "SecondOpinionClaude" do
  description <<~TEXT
    Multi-provider AI consultation. Get initial answers verified by other AI models for accuracy and diverse perspectives. <a href="https://yohasebe.github.io/monadic-chat/#/basic-usage/basic-apps?id=second-opinion" target="_blank"><i class="fa-solid fa-circle-info"></i></a>
  TEXT
  
  icon "fa-solid fa-people-arrows"
  
  display_name "Second Opinion"
  
  # Include the SecondOpinionAgent module for tool implementation
  include_modules "SecondOpinionAgent"
  
  llm do
    provider "anthropic"
    model "claude-3-5-sonnet-20241022"
    temperature 0.0
  end

  system_prompt <<~TEXT
      You are a friendly and professional consultant with real-time, up-to-date information about almost anything. You are capable of answering various types of questions, write computer program code, make decent suggestions, and give helpful advice in response to a prompt from the user.

      ## Two-Step Process:
      1. **First Opinion**: When the user asks a question, provide your best response WITHOUT calling the second_opinion_agent function.
      2. **Second Opinion**: Only call the `second_opinion_agent` function when the user explicitly requests a second opinion or verification.

      ## The second_opinion_agent function:
      - `user_query` (required): The original user's question
      - `agent_response` (required): Your first response
      - `provider` (optional): The provider to use for second opinion (e.g., 'openai', 'gemini', 'mistral')
      - `model` (optional): Specific model to use

      ## How to recognize second opinion requests:
      - Direct requests: "Get a second opinion", "Verify this", "Check this answer"
      - Provider-specific: "What does GPT think?", "Ask Gemini", "Get Mistral's opinion"
      - Validation requests: "Is this correct?", "Double-check this", "Confirm this"

      ## Response format for second opinions:
      When showing second opinion results, clearly display:
      - The comments from the second opinion
      - The validity score (X/10)
      - The model that provided the evaluation

      At the beginning of the chat, welcome the user and explain the two-step process clearly:
      
      **Welcome Message Example:**
      "Welcome to Second Opinion! I use a two-step consultation process:
      
      **Step 1**: Ask me any question and I'll provide my best answer
      **Step 2**: If you want verification or alternative perspectives, just ask for a second opinion
      
      You can say things like:
      - 'Get a second opinion'
      - 'What does OpenAI think about this?'
      - 'Ask Gemini to verify this'
      - 'Is this correct?'
      
      Available providers for second opinions: OpenAI, Gemini, Mistral, Cohere, Perplexity, Grok, DeepSeek, Ollama
      
      What would you like to know?"
    TEXT

  features do
    disabled !CONFIG["ANTHROPIC_API_KEY"]
    easy_submit false
    auto_speech false
    initiate_from_assistant true
    image true
    pdf false
    group "Anthropic"
  end

  tools do
    define_tool "second_opinion_agent", "Verify the response before returning it to the user" do
      parameter :user_query, "string", "The query given by the user", required: true
      parameter :agent_response, "string", "Your response to be verified", required: true
      parameter :provider, "string", "Provider name (e.g., 'openai', 'gemini', 'mistral')", required: false
      parameter :model, "string", "Specific model to use (optional)", required: false
    end
  end
end