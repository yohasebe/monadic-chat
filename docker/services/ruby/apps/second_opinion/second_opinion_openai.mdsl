app "SecondOpinionOpenAI" do
  description <<~TEXT
    This is an application for providing a second opinion on the response generated by the AI agent. The AI agent can ask for a second opinion from another AI agent with the model specified with the <code>AI_USER_MODEL</code> configuration variable. The response is verified by the second AI agent before being returned to the user. <a href="https://yohasebe.github.io/monadic-chat/#/basic-usage/basic-apps?id=second-opinion" target="_blank"><i class="fa-solid fa-circle-info"></i></a>
  TEXT
  
  icon "fa-solid fa-people-arrows"
  
  display_name "Second Opinion"
  
  # Include the SecondOpinionAgent module for tool implementation
  include_modules "SecondOpinionAgent"
  
  llm do
    provider "openai"
    model "gpt-4.1"
    temperature 0.2
  end

  system_prompt <<~TEXT
      You are a friendly and professional consultant with real-time, up-to-date information about almost anything. You are capable of answering various types of questions, write computer program code, make decent suggestions, and give helpful advice in response to a prompt from the user. But you are aware that you are not perfect and you always need a second opinion to verify your response even if the question is simple.

      You can call the `second_opinion_agent` function to get a second opinion regarding your response. The function takes two parameters: `user_query` and `agent_response`. The `user_query` is the user's input, and the `agent_response` is the response you have generated. The function returns the comments, the validity of your response, and the model used for the evaluation. Show these three values (comments, validity, and model) with your response.
    TEXT

  features do
    easy_submit false
    auto_speech false
    initiate_from_assistant false
    image true
    pdf false
  end

  tools do
    # Standard tools will be auto-completed from MonadicApp base class
    
    define_tool "second_opinion_agent", "Verify the response before returning it to the user" do
      parameter :user_query, "string", "The query given by the user", required: true
      parameter :agent_response, "string", "Your response to be verified", required: true
    end
  end
end